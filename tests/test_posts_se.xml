<?xml version="1.0" encoding="utf-8"?>
<posts>
  <row Id="11062" PostTypeId="2" ParentId="11060" CreationDate="2020-01-01T02:05:33.300" Score="3" Body="&lt;p&gt;If you have issue with memory and dealing with large object, maybe &lt;code&gt;data.table&lt;/code&gt; is the way to go (&lt;a href=&quot;https://github.com/Rdatatable/data.table/wiki&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/Rdatatable/data.table/wiki&lt;/a&gt;): &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let's take two dummy data.frame:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-r prettyprint-override&quot;&gt;&lt;code&gt;dfA &amp;lt;- data.frame(Chrom = rep(&quot;chr1&quot;,150),&#xA;                  Pos = 1:150,&#xA;                  ref = rep(&quot;A&quot;,150))&#xA;dfB &amp;lt;- data.frame(Chrom = rep(&quot;chr1&quot;,10),&#xA;                  Pos = 11:20,&#xA;                  Vaf = rep(&quot;VAF&quot;, 10))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;The big data.frame &lt;code&gt;dfA&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-r prettyprint-override&quot;&gt;&lt;code&gt;&amp;gt; head(dfA)&#xA;  Chrom Pos ref&#xA;1  chr1   1   A&#xA;2  chr1   2   A&#xA;3  chr1   3   A&#xA;4  chr1   4   A&#xA;5  chr1   5   A&#xA;6  chr1   6   A&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;and the small dataset:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-r prettyprint-override&quot;&gt;&lt;code&gt;&amp;gt; dfB&#xA;   Chrom Pos Vaf&#xA;1   chr1  11 VAF&#xA;2   chr1  12 VAF&#xA;3   chr1  13 VAF&#xA;4   chr1  14 VAF&#xA;5   chr1  15 VAF&#xA;6   chr1  16 VAF&#xA;7   chr1  17 VAF&#xA;8   chr1  18 VAF&#xA;9   chr1  19 VAF&#xA;10  chr1  20 VAF&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Now, using &lt;code&gt;data.table&lt;/code&gt; that is more efficient and less memory consuming for the manipulation of dataframe, you can do:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-r prettyprint-override&quot;&gt;&lt;code&gt;library(data.table)&#xA;setDT(dfA)&#xA;setDT(dfB)&#xA;dfA[dfB, on = c(&quot;Chrom&quot;,&quot;Pos&quot;), vaf := i.Vaf]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And now, your data.frame &lt;code&gt;dfA&lt;/code&gt; looks like:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-r prettyprint-override&quot;&gt;&lt;code&gt;&amp;gt; dfA[5:25]&#xA;    Chrom Pos ref  vaf&#xA; 1:  chr1   5   A &amp;lt;NA&amp;gt;&#xA; 2:  chr1   6   A &amp;lt;NA&amp;gt;&#xA; 3:  chr1   7   A &amp;lt;NA&amp;gt;&#xA; 4:  chr1   8   A &amp;lt;NA&amp;gt;&#xA; 5:  chr1   9   A &amp;lt;NA&amp;gt;&#xA; 6:  chr1  10   A &amp;lt;NA&amp;gt;&#xA; 7:  chr1  11   A  VAF&#xA; 8:  chr1  12   A  VAF&#xA; 9:  chr1  13   A  VAF&#xA;10:  chr1  14   A  VAF&#xA;11:  chr1  15   A  VAF&#xA;12:  chr1  16   A  VAF&#xA;13:  chr1  17   A  VAF&#xA;14:  chr1  18   A  VAF&#xA;15:  chr1  19   A  VAF&#xA;16:  chr1  20   A  VAF&#xA;17:  chr1  21   A &amp;lt;NA&amp;gt;&#xA;18:  chr1  22   A &amp;lt;NA&amp;gt;&#xA;19:  chr1  23   A &amp;lt;NA&amp;gt;&#xA;20:  chr1  24   A &amp;lt;NA&amp;gt;&#xA;21:  chr1  25   A &amp;lt;NA&amp;gt;&#xA;    Chrom Pos ref  vaf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;As you see, we incorporate the column &lt;code&gt;Vaf&lt;/code&gt; from the small dataframe into the big dataframe.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With your example, I will first rename the colnames of your small dataframe in order to have the perfect match with the big dataframe:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-r prettyprint-override&quot;&gt;&lt;code&gt;colnames(data) &amp;lt;- gsub(&quot;Chrom&quot;, &quot;Chromosome&quot;, colnames(data))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;then,&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-r prettyprint-override&quot;&gt;&lt;code&gt;setDT(data1)&#xA;setDT(data)&#xA;data1[data, on = c(&quot;Chromosome&quot;,&quot;Position&quot;), i_TumorVAF_WU := i.VAF]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Does it look what you are trying to obtain ?&lt;/p&gt;&#xA;" OwnerUserId="6437" LastEditorUserId="6437" LastEditDate="2020-01-01T02:11:24.293" LastActivityDate="2020-01-01T02:11:24.293" CommentCount="0" />
  <row Id="11063" PostTypeId="1" CreationDate="2020-01-01T09:40:54.017" Score="0" ViewCount="19" Body="&lt;p&gt;&lt;a href=&quot;https://bioconductor.org/packages/release/bioc/html/GeneOverlap.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;GeneOverlap&lt;/a&gt; I am trying to use this library so in the default data sets it has different list of genes which are categorized as high low or medium expressed genes. So my question is can I run this one using deferentially expressed genes list various comparison or I need the gene list to be categorized into various groups based on expression.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My objective is to look for significant overlap happening or not for example I came across this figure in this &lt;a href=&quot;https://www.nature.com/articles/s41386-018-0296-1&quot; rel=&quot;nofollow noreferrer&quot;&gt;paper&lt;/a&gt; &lt;a href=&quot;https://i.stack.imgur.com/I9Zz6.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/I9Zz6.png&quot; alt=&quot;figureE &quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="285" LastActivityDate="2020-01-01T09:40:54.017" Title="Geneoverlap library data input" Tags="&lt;r&gt;&lt;bioconductor&gt;" AnswerCount="0" CommentCount="0" />
  <row Id="11064" PostTypeId="2" ParentId="11061" CreationDate="2020-01-01T11:06:24.120" Score="1" Body="&lt;p&gt;Here is a quick and kind of dirty solution with minimum intervention to the code:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Add &lt;code&gt;$outname'\t'&lt;/code&gt; right after &lt;code&gt;echo -e&lt;/code&gt; to two two lines, the lines after &lt;code&gt;#Header for output file&lt;/code&gt; and &lt;code&gt;#Print output&lt;/code&gt;. The former will alter your header and the latter your actual output: you will have a first column with file name information.&lt;/li&gt;&#xA;&lt;li&gt;Then you can run this script in a for loop to generate multiple output files which then can be merged into a single file with &lt;code&gt;cat&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Note that with this workaround, you will have multiple headers in the merged file. If you need a clean output, you will need to put your while loop in a for loop.&lt;/p&gt;&#xA;" OwnerUserId="3541" LastActivityDate="2020-01-01T11:06:24.120" CommentCount="3" />
  <row Id="11067" PostTypeId="2" ParentId="11061" CreationDate="2020-01-01T17:03:10.967" Score="5" Body="&lt;p&gt;Using shell loops for text practice &lt;a href=&quot;https://unix.stackexchange.com/q/169716/22222&quot;&gt;is considered bad practice&lt;/a&gt;. It is exceedingly slow, the syntax is complicated so it's very easy to get it wrong and it's just painful. The shell isn't designed as a proper scripting language, so while it can be (ab)used that way, you really should avoid it whenever possible. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here's a Perl script that should do exactly what your bash script does but will be several times faster and can deal with multiple input files:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-perl prettyprint-override&quot;&gt;&lt;code&gt;#!/usr/bin/env perl&#xA;&#xA;## Iterate over all files given at the command line&#xA;foreach my &lt;span class=&quot;math-container&quot;&gt;$inFile (@ARGV) {&#xA;  print STDERR &quot;Processing $inFile...\n&quot;;&#xA;  my $outFile = &quot;$inFile.parsed.txt&quot;;&#xA;  $outFile =~ m|([^/]+)$|;&#xA;  #/#Useless comment to fix SE syntax highlighting&#xA;  my $outFileName = $1;&#xA;  open(my $outFileHandle, '&amp;gt;', $outFile) or&#xA;      die(&quot;Couldn't open '$outFile' for writing: $!&quot;);&#xA;  open(my $inFileHandle, '&amp;lt;', $inFile) or&#xA;      die(&quot;Couldn't open '$inFile' for writing: $&lt;/span&gt;!&quot;);&#xA;&#xA;  ## Print header&#xA;  print &lt;span class=&quot;math-container&quot;&gt;$outFileHandle &quot;$&lt;/span&gt;outFileName\tChrom\tPosition\tRef\tAlt\tTumorReadCount\t&quot; .&#xA;      &quot;TumorVariantAlleleCount\tTumorReferenceAlleleCount\tNormalReadCount&quot; .&#xA;          &quot;\tNormalVariantAlleleCount\tNormalReferenceAlleleCount\tVAF\n&quot;;&#xA;  ## Read all lines of the input file&#xA;  while (&amp;lt;&lt;span class=&quot;math-container&quot;&gt;$inFileHandle&amp;gt;) {&#xA;    ## Skip headers&#xA;    next if /^#/;&#xA;    ## Get VCF fields&#xA;    my ($chrom, $pos, $name, $ref, $alt, $qual,&#xA;        $filter, $info, $format, $values) = split(/\t/);&#xA;    my @infoFields = split(/;/, $info);&#xA;    my $readCount = $infoFields[12];&#xA;    $&lt;/span&gt;readCount =~ s/ReadCount=//;&#xA;    #/#Useless comment to fix SE syntax highlighting&#xA;&#xA;    my &lt;span class=&quot;math-container&quot;&gt;$variantAlleleCount = $&lt;/span&gt;infoFields[25];&#xA;    &lt;span class=&quot;math-container&quot;&gt;$variantAlleleCount =~ s/VariantAlleleCount=//;&#xA;    #/#Useless comment to fix SE syntax highlighting&#xA;    my $&lt;/span&gt;referenceAlleleCount= &lt;span class=&quot;math-container&quot;&gt;$readCount - $&lt;/span&gt;variantAlleleCount;&#xA;&#xA;    my &lt;span class=&quot;math-container&quot;&gt;$readCountControl = $&lt;/span&gt;infoFields[13];&#xA;    $readCountControl =~ s/ReadCountControl=//;&#xA;    #/#Useless comment to fix SE syntax highlighting&#xA;&#xA;    my &lt;span class=&quot;math-container&quot;&gt;$variantAlleleCountControl = $&lt;/span&gt;infoFields[26];&#xA;    $variantAlleleCountControl =~ s/VariantAlleleCountControl=//;&#xA;    #/#Useless comment to fix SE syntax highlighting&#xA;&#xA;    my &lt;span class=&quot;math-container&quot;&gt;$referenceAlleleCountControl = $&lt;/span&gt;readCountControl - &lt;span class=&quot;math-container&quot;&gt;$variantAlleleCountControl;&#xA;    my $&lt;/span&gt;VAF = &lt;span class=&quot;math-container&quot;&gt;$infoFields[27];&#xA;    $&lt;/span&gt;VAF =~ s/VariantAlleleFrequency=//;&#xA;    #/#Useless comment to fix SE syntax highlighting&#xA;&#xA;    my &lt;span class=&quot;math-container&quot;&gt;$outString = join(&quot;\t&quot;, $&lt;/span&gt;outFileName, &lt;span class=&quot;math-container&quot;&gt;$chrom, $&lt;/span&gt;pos, &lt;span class=&quot;math-container&quot;&gt;$ref, $&lt;/span&gt;alt, &lt;span class=&quot;math-container&quot;&gt;$readCount,&#xA;                         $&lt;/span&gt;variantAlleleCount, &lt;span class=&quot;math-container&quot;&gt;$referenceAlleleCount, $&lt;/span&gt;readCountControl,&#xA;                         &lt;span class=&quot;math-container&quot;&gt;$variantAlleleCountControl, $&lt;/span&gt;referenceAlleleCountControl, &lt;span class=&quot;math-container&quot;&gt;$VAF);&#xA;    print $&lt;/span&gt;outFileHandle &quot;&lt;span class=&quot;math-container&quot;&gt;$outString\n&quot;;&#xA;  }&#xA;  close($&lt;/span&gt;outFileHandle);&#xA;  close($inFileHandle);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Save that file as &lt;code&gt;parser.pl&lt;/code&gt; and then run it on all your vcf files with:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;perl parser.pl /path/to/vcfs/*vcf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;That should create a &lt;code&gt;.parsed.txt&lt;/code&gt; file for each input file in the target directory. &lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;If you just have to use the shell for this, you can try with this improved version of your script:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-sh prettyprint-override&quot;&gt;&lt;code&gt;#!/usr/bin/env bash&#xA;&#xA;for file in &quot;&lt;span class=&quot;math-container&quot;&gt;$@&quot;; do&#xA;  outFile=&quot;$&lt;/span&gt;{file}.parsed.txt&quot;&#xA;  outFileName=&lt;span class=&quot;math-container&quot;&gt;$(basename &quot;$&lt;/span&gt;outFile&quot;)&#xA;  (&#xA;    printf '%s\tChrom\tPosition\tRef\tAlt\tTumorReadCount\t' &quot;&lt;span class=&quot;math-container&quot;&gt;$outFileName&quot;&#xA;    printf 'TumorVariantAlleleCount\tTumorReferenceAlleleCount\tNormalReadCount\t'&#xA;    printf 'NormalVariantAlleleCount\tNormalReferenceAlleleCount\tVAF\n'&#xA;  ) &amp;gt; &quot;$&lt;/span&gt;outFile&quot;&#xA;&#xA;  echo &quot;Reading &lt;span class=&quot;math-container&quot;&gt;$file&quot;&#xA;  grep -v '^#' &quot;$&lt;/span&gt;file&quot; |&#xA;    while read -r line; do&#xA;      read chrom Pos Ref Alt rest &amp;lt; &amp;lt;(awk -F&quot;\t&quot; '{print &lt;span class=&quot;math-container&quot;&gt;$1,$&lt;/span&gt;2,&lt;span class=&quot;math-container&quot;&gt;$4,$&lt;/span&gt;5}' &amp;lt;&amp;lt;&amp;lt;&quot;&lt;span class=&quot;math-container&quot;&gt;$line&quot;)&#xA;      ReadCount=$&lt;/span&gt;(echo &quot;&lt;span class=&quot;math-container&quot;&gt;$line&quot; | cut -f 8 | sed 's/;/\t/g' | cut -f 13 | sed 's/ReadCount=//' )&#xA;      VariantAlleleCount=$&lt;/span&gt;(echo &quot;&lt;span class=&quot;math-container&quot;&gt;$line&quot; | cut -f 8 | sed 's/;/\t/g' | cut -f 26| sed 's/VariantAlleleCount=//')&#xA;      ReferenceAlleleCount=$&lt;/span&gt;((&lt;span class=&quot;math-container&quot;&gt;$ReadCount - $&lt;/span&gt;VariantAlleleCount))&#xA;&#xA;      ReadCountControl=&lt;span class=&quot;math-container&quot;&gt;$(echo &quot;$&lt;/span&gt;line&quot; | cut -f 8 | sed 's/;/\t/g' | cut -f 14 | sed 's/ReadCountControl=//')&#xA;      VariantAlleleCountControl=&lt;span class=&quot;math-container&quot;&gt;$(echo &quot;$&lt;/span&gt;line&quot; | cut -f 8 | sed 's/;/\t/g' | cut -f 27 | sed 's/VariantAlleleCountControl=//')   &#xA;&#xA;      ReferenceAlleleCountControl=&lt;span class=&quot;math-container&quot;&gt;$(($&lt;/span&gt;ReadCountControl - $VariantAlleleCountControl))&#xA;&#xA;      VAF=&lt;span class=&quot;math-container&quot;&gt;$(echo &quot;$&lt;/span&gt;line&quot; | cut -f 8 | sed 's/;/\t/g' | cut -f 28 | sed 's/VariantAlleleFrequency=//')&#xA;      printf '%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n' &quot;&lt;span class=&quot;math-container&quot;&gt;$outFileName&quot; &quot;$&lt;/span&gt;chrom&quot; &quot;&lt;span class=&quot;math-container&quot;&gt;$Pos&quot; &quot;$&lt;/span&gt;Ref&quot; &quot;&lt;span class=&quot;math-container&quot;&gt;$Alt&quot; \&#xA;             &quot;$&lt;/span&gt;ReadCount&quot; &quot;&lt;span class=&quot;math-container&quot;&gt;$VariantAlleleCount&quot; &quot;$&lt;/span&gt;ReferenceAlleleCount&quot; &quot;&lt;span class=&quot;math-container&quot;&gt;$ReadCountControl&quot; &quot;$&lt;/span&gt;VariantAlleleCountControl&quot; \&#xA;             &quot;&lt;span class=&quot;math-container&quot;&gt;$ReferenceAlleleCountControl&quot; &quot;$&lt;/span&gt;VAF&quot; &amp;gt;&amp;gt; &quot;$outFile&quot; &#xA;    done&#xA;done&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Just to illustrate what I mean about the shell being slow, I ran both scripts above on the example files you provided:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;$ time foo.pl *vcf 2&amp;gt;/dev/null&#xA;&#xA;real    0m0.051s&#xA;user    0m0.047s&#xA;sys     0m0.003s&#xA;&#xA;$ time bar.sh *vcf 2&amp;gt;/dev/null&#xA;&#xA;real    2m28.842s&#xA;user    3m33.648s&#xA;sys     1m12.456s&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;As you can see above, the perl script took less than a second, while the bash script took almost two and a half minutes!&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Finally, if you find the perl script too long, here's the same thing in a more condensed style:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-perl prettyprint-override&quot;&gt;&lt;code&gt;#!/usr/bin/env perl&#xA;&#xA;## Iterate over all files given at the command line&#xA;foreach my &lt;span class=&quot;math-container&quot;&gt;$inFile (@ARGV) {&#xA;  print STDERR &quot;Processing $inFile...\n&quot;;&#xA;  my $outFile = &quot;$inFile.parsed.txt&quot;;&#xA;  $outFile =~ m|([^/]+)$|;&#xA;  #/#Useless comment to fix SE syntax highlighting&#xA;  my $outFileName = $1;&#xA;  open(my $outFileHandle, '&amp;gt;', $outFile);&#xA;  open(my $inFileHandle, '&amp;lt;', $&lt;/span&gt;inFile);&#xA;&#xA;  ## Print header&#xA;  print &lt;span class=&quot;math-container&quot;&gt;$outFileHandle &quot;$&lt;/span&gt;outFileName\tChrom\tPosition\tRef\tAlt\tTumorReadCount\t&quot; .&#xA;      &quot;TumorVariantAlleleCount\tTumorReferenceAlleleCount\tNormalReadCount&quot; .&#xA;          &quot;\tNormalVariantAlleleCount\tNormalReferenceAlleleCount\tVAF\n&quot;;&#xA;  ## Read all lines of the input file&#xA;  while (&amp;lt;&lt;span class=&quot;math-container&quot;&gt;$inFileHandle&amp;gt;) {&#xA;    ## Skip headers&#xA;    next if /^#/;&#xA;    ## Get VCF fields&#xA;    my ($chrom, $pos, $name, $ref, $alt, $qual,&#xA;        $filter, $info, $format, $values) = split(/\t/);&#xA;    $info=~s/[^;]+=//g;&#xA;    my @infoFields = split(/;/, $info);&#xA;    print $outFileHandle (join &quot;\t&quot;, $outFileName, $chrom, $pos, $ref, $alt,&#xA;                               $infoFields[12],$infoFields[25],&#xA;                               $infoFields[12]-$infoFields[25],&#xA;                               $infoFields[13],$infoFields[26],&#xA;                               $infoFields[13]-$infoFields[26],&#xA;                               $&lt;/span&gt;infoFields[27]) . &quot;\n&quot;;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="298" LastActivityDate="2020-01-01T17:03:10.967" CommentCount="6" />
  <row Id="11068" PostTypeId="1" CreationDate="2020-01-01T17:55:04.727" Score="2" ViewCount="33" Body="&lt;p&gt;I am using IGV 2.5.2 and would not like to see the insertions  in my aligned reads. How can I do that? I have managed to remove mismatched bases because there is an option to do so when I right-click on the window (&quot;Show mismatched bases&quot;). Now I would like to do the same with these purple insertions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/hxliq.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/hxliq.png&quot; alt=&quot;IGV screenshot&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;3rd January 2020 update&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/avy5K.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/avy5K.png&quot; alt=&quot;IGV preferences&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thanks to a member's response, I found some parameter in the preferences that might be helpful to hide the indels. However, I have tried different numbers from 0 to 1000 and the indels are still shown. What numbers should I put to the parameters &quot;Show indel threshold (bases)&quot; and should I click the box or not?&lt;/p&gt;&#xA;" OwnerUserId="1075" LastEditorUserId="1075" LastEditDate="2020-01-03T18:04:22.677" LastActivityDate="2020-01-03T18:04:22.677" Title="How can I not show insertions in the Integrative Genome Viewer (IGV)?" Tags="&lt;alignment&gt;&lt;sequence-alignment&gt;&lt;visualization&gt;&lt;igv&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="11070" PostTypeId="2" ParentId="11068" CreationDate="2020-01-02T22:10:34.813" Score="3" Body="&lt;p&gt;Preferences &lt;code&gt;-&amp;gt;&lt;/code&gt; Alignments &lt;code&gt;-&amp;gt;&lt;/code&gt; Hide indels &amp;lt; 'x' bases.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Credit to &lt;a href=&quot;https://www.biostars.org/p/339007/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Pierre Lindenbaum&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="181" LastActivityDate="2020-01-02T22:10:34.813" CommentCount="0" />
  <row Id="11071" PostTypeId="2" ParentId="3500" CreationDate="2020-01-03T22:39:24.113" Score="0" Body="&lt;p&gt;Use this line of code:    &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;print(analysed_seq.protein_scale(analysed_seq.get_amino_acids_percent(), window=9, edge=0.4))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="6714" LastActivityDate="2020-01-03T22:39:24.113" CommentCount="1" />
  <row Id="11072" PostTypeId="1" CreationDate="2020-01-04T00:20:18.280" Score="2" ViewCount="19" Body="&lt;p&gt;I found that there are a couple of projects that allow the user to simulate the neural system of C Elegans. I don't know how to navigate sources in bioinformatics and thus struggle to evaluate their quality. Are there any fundamental / most widely accepted data sources for raw data of C Elegans connectome or electron microscope scans of this organism, similar to Human Genome Project? If not, what are the ways to derive the data without having access to an electron microscope?&lt;/p&gt;&#xA;" OwnerUserId="6715" LastEditorUserId="6715" LastEditDate="2020-01-04T09:17:22.693" LastActivityDate="2020-01-04T09:17:22.693" Title="Are there any &quot;canonical&quot; sources of C. Elegans connectome?" Tags="&lt;public-databases&gt;" AnswerCount="0" CommentCount="1" />
  <row Id="11074" PostTypeId="1" AcceptedAnswerId="11085" CreationDate="2020-01-04T16:39:12.990" Score="0" ViewCount="95" Body="&lt;p&gt;I have a bash script:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am wondering how I can change this script to loop over a bunch of .vcf files and give output .txt with the name of corresponding .vcf &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I tried changes done in similar script in  &lt;a href=&quot;https://bioinformatics.stackexchange.com/questions/11061/changing-this-code-in-a-way-to-work-for-my-files/11067?noredirect=1#comment15031_11067&quot;&gt;Changing this code in a way to work for my files&lt;/a&gt; but I just  messed everything up&lt;/p&gt;&#xA;" OwnerUserId="4595" LastEditorUserId="4595" LastEditDate="2020-01-07T12:10:26.760" LastActivityDate="2020-01-07T15:28:39.057" Title="Looping over several files in bash" Tags="&lt;vcf&gt;&lt;bash&gt;&lt;linux&gt;&lt;wgs&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="1" />
  <row Id="11075" PostTypeId="1" AcceptedAnswerId="11099" CreationDate="2020-01-04T22:07:38.867" Score="2" ViewCount="36" Body="&lt;h2&gt;&lt;a href=&quot;https://i.stack.imgur.com/cnOA0.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/cnOA0.png&quot; alt=&quot;Subchains view.&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;I'm trying to programmatically construct a name for each protein subchain in any ribosome from Uniprot in accordance with Ban et. al's 2014 proposal (excerpt given below) using PDB's and Uniprot's APIs.&#xA;This is to be a part of a bigger ribosomal analysis suite released next year and we would like to standardize the names as much as possible.&#xA;Ban et. al's proposal: [&lt;a href=&quot;https://bangroup.ethz.ch/research/nomenclature-of-ribosomal-proteins.html]&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://bangroup.ethz.ch/research/nomenclature-of-ribosomal-proteins.html]&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;I'm however not remotely a biologist (I work in compilers) and &lt;strong&gt;&lt;em&gt;would really appreciate some clarification on the way nomenclature works across domains of life and how homology plays into it.&lt;/em&gt;&lt;/strong&gt; &#xA;This is my &lt;em&gt;naive&lt;/em&gt; approach thus far: &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I get a ribosome from PDB let's say (&lt;em&gt;3J9M&lt;/em&gt; or &lt;em&gt;5MYJ&lt;/em&gt; or any other for that matter) and split it into protein subchains. So on the order of 20-80 proteins.&lt;/li&gt;&#xA;&lt;li&gt;For each protein subchain, I can get all the information in the world on it from Uniprot: names, sequence, organisms containing it, publications, synonymous names, you name it...&lt;/li&gt;&#xA;&lt;li&gt;Right now (again, naively) for those proteins that &lt;em&gt;don't already have a new name assigned to them&lt;/em&gt;, I take name-synonyms that PDB has plenty of (from various publications, I assume) and scan them with regexes (ex.&lt;code&gt;/[LS]\d{1,2}/g&lt;/code&gt;) for things like &lt;code&gt;&quot;L8&quot;&lt;/code&gt; or &lt;code&gt;&quot;S15&quot;&lt;/code&gt;. &lt;/li&gt;&#xA;&lt;li&gt;Thus, for each subchain, I end up with something like &lt;code&gt;&quot;L15&quot;&lt;/code&gt; or &lt;code&gt;&quot;S28&quot;&lt;/code&gt; in multiple copies (depending on the abundance of synonymous entries in PDB).&lt;/li&gt;&#xA;&lt;li&gt;The rut i'm in right now is this: having something like &lt;code&gt;&quot;L15&quot;&lt;/code&gt; to match it to a new &quot;Ban-nomenclature&quot; name: they provide the nomenclature look-up tables in terms of these three &quot;historical&quot; naming conventions(i.e &quot;human&quot;, &quot;yeast&quot;, &quot;bacteria&quot;) and a taxonomic range while all the I have is the ribosomal structure(ex `` from which I got the subchain. I'm sure there's plenty of information that I can get &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Could somebody elucidate to me which assumptions I can and cannot make in this field and how exactly to use the &lt;em&gt;taxonomic range&lt;/em&gt;? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Say, (i) can I assume that all archean names are the same as bacterial homologs?&#xA;If I draw a eukaryotic cytoplasmic ribosome, do I match its subchains against yeast column or human column (since both are eukaryotic)?&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Somebody suggested that I start grouping these subchains based on sequence, not on a domain and I do have access to each protein's sequence, but I am not sure how to go about it. I was thinking to get each of Ban's new names' &lt;strong&gt;UniRef90&lt;/strong&gt; cluster, let's say, and then start checking which cluster a given subchain belongs to. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;But I'm obviously guessing at this point. Any advice or pointers are very appreciated. &lt;/p&gt;&#xA;&#xA;&lt;h2&gt; &lt;a href=&quot;https://i.stack.imgur.com/TlcEE.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/TlcEE.png&quot; alt=&quot;Excerpt from Ban&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;" OwnerUserId="6511" LastEditorUserId="6511" LastEditDate="2020-01-06T06:09:29.777" LastActivityDate="2020-01-07T21:44:58.037" Title="Infer the new (Ban et. al) ribosomal nomenlature (ex. uL53 ) from the ribosomal protein's sequence" Tags="&lt;biopython&gt;&lt;uniprot&gt;&lt;ribosomal&gt;&lt;nomenclature&gt;&lt;sequence&gt;" AnswerCount="1" CommentCount="5" />
  <row Id="11077" PostTypeId="1" CreationDate="2020-01-05T08:58:12.143" Score="0" ViewCount="49" Body="&lt;p&gt;we performed a combined gene expression and CiteSeq experiment with the 10x VDJ kit and 20 conjugated antibodies and sequenced on hiseq. I used cellranger to process the sequencing output. The cellranger summary shows overall good values except for a low percentage of &quot;Antibody Reads Usable&quot; and a low fraction of &quot;Antibody Reads in Cells&quot;. How is it possible that so few antibody reads are usable? Does this mean that most antibodies were not bound to the cell surface?  &lt;a href=&quot;https://i.stack.imgur.com/cHkxg.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/cHkxg.png&quot; alt=&quot;cellranger metrics&quot;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;" OwnerUserId="6718" LastActivityDate="2020-01-31T09:05:28.280" Title="Low Fraction of usable antibody reads in CiteSeq" Tags="&lt;scrnaseq&gt;&lt;sequencing&gt;&lt;single-cell&gt;&lt;10x-genomics&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="11078" PostTypeId="2" ParentId="11074" CreationDate="2020-01-05T11:11:41.790" Score="2" Body="&lt;p&gt;Error means that quotations are missing. I am not going to review this chunk but at first glance check &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;printf 'TumorAltAlleleCount\tTumorAltAlleleFrequency\t'\n'&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;There are three quotation marks so one is not matched. I suggest you develop code within a good IDE that will help you debug. Please google around for potential solutions. I personally do R and Shell scripting in RStudio. It differently colors quoted and unquoted code so you immediately see if you missed a closing quotation somewhere.&lt;/p&gt;&#xA;" OwnerUserId="3051" LastActivityDate="2020-01-05T11:11:41.790" CommentCount="0" />
  <row Id="11079" PostTypeId="1" AcceptedAnswerId="11080" CreationDate="2020-01-05T17:20:38.883" Score="2" ViewCount="50" Body="&lt;p&gt;I have a list of vcf files; I also have a list of names in a txt file like&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;LP6005409-DNA_F01&#xA;LP2000325-DNA_A01&#xA;LP6005409-DNA_E02&#xA;LP6005500-DNA_C03&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;What I have in this txt files are part of name of each vcf files&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I want to move .vcf files having these in their name to a separate folder&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I done&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;[fi1d18@cyan01 TRG]&lt;span class=&quot;math-container&quot;&gt;$ for i in *.vcf&#xA;&amp;gt; do if grep -q $&lt;/span&gt;i 1.txt;&#xA;&amp;gt; cp *&lt;span class=&quot;math-container&quot;&gt;$out* /temp/hgig/fi1d18/TRG45/snp/snp/TRG/pre/&#xA;&amp;gt; done&#xA;-bash: syntax error near unexpected token `done'&#xA;[fi1d18@cyan01 TRG]$&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;How I can complete this task?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thank you&lt;/p&gt;&#xA;" OwnerUserId="4595" LastEditorUserId="298" LastEditDate="2020-01-06T09:43:15.410" LastActivityDate="2020-01-21T19:29:07.280" Title="Moving file based on their names" Tags="&lt;bash&gt;&lt;linux&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="1" />
  <row Id="11080" PostTypeId="2" ParentId="11079" CreationDate="2020-01-05T19:34:42.530" Score="5" Body="&lt;p&gt;First of all you are getting an error because you are missing a &lt;code&gt;then&lt;/code&gt; in the third line of your code and then a &lt;code&gt;fi&lt;/code&gt; to close the &lt;code&gt;if&lt;/code&gt;. It should be:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;for i in *.vcf&#xA;do if grep -q &lt;span class=&quot;math-container&quot;&gt;$i 1.txt; then&#xA;    cp *$&lt;/span&gt;out* /temp/hgig/fi1d18/TRG45/snp/snp/TRG/pre/&#xA;fi&#xA;done&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And I guess the one-liner below achieves what you are trying to do:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;while IFS= read -r line; do mv &quot;$line&quot;*.vcf some-directory; done &amp;lt; file-list.txt &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="3541" LastEditorUserId="298" LastEditDate="2020-01-06T09:38:19.013" LastActivityDate="2020-01-06T09:38:19.013" CommentCount="0" />
  <row Id="11081" PostTypeId="1" CreationDate="2020-01-05T19:47:10.463" Score="0" ViewCount="20" Body="&lt;p&gt;I'm studying on a plant that has no reference genome and only has one scaffold assembly and one gff3 annotation file. Can I create an index with the same assembly and gff3 in STAR and do the mapping? If I want to do de novo assembly using the Galaxy Can I import the links of 20 fastq files from the RNA-seq of the samples together to construct the Reference Genome with Trinity? If this is possible, please help me import the links of these files together into Galaxy and make the reference genome.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thanks a lot&lt;/p&gt;&#xA;" OwnerUserId="6719" LastActivityDate="2020-01-05T20:43:29.183" Title="mapping and de novo assembly of plant without reference genome" Tags="&lt;rna-seq&gt;&lt;assembly&gt;" AnswerCount="1" CommentCount="0" />
</posts>
